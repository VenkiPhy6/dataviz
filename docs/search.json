[
  {
    "objectID": "assign1.html",
    "href": "assign1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "This is Assignment 1."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Venkiâ€™s website for Data Viz (EPPS 6356) class",
    "section": "",
    "text": "My assignments are under the Assignments tab. Outputs related to the project are under the projects tab.\nThanks for visiting!"
  },
  {
    "objectID": "assignments.html",
    "href": "assignments.html",
    "title": "Assignments",
    "section": "",
    "text": "Assignment 1\nAssignment 3\nAssignment 4 - Class Hackathon on Oct 8"
  },
  {
    "objectID": "assign3.html",
    "href": "assign3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "I had to replicate the following scatterplot with my own code.\n\nThe following code was provided to get the dataset.\n\n## Download COVID data from OWID GitHub\n# owidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# Save it to save time when rendering\n# saveRDS(owidall, \"./data/owidall_assign3.rds\")\nowidall = readRDS(\"./data/owidall_assign3.rds\")\n# Deselect cases/rows with OWID\nowidall = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n# Subset by continent: Europe\nowideu = subset(owidall, continent==\"Europe\")\n\nNow I write code in hopes of replicating the plot.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nowideu &lt;- owideu |&gt; \n  mutate(date = as.Date(date, format = \"%Y-%m-%d\"),\n         date_mon = floor_date(date, \"month\")) |&gt; \n  filter(!(location %in% c(\"United Kingdom\", \"Russia\")))\n\nwave1_st &lt;- as.Date(\"2020-02-01\")\nwave2_st &lt;- as.Date(\"2020-11-01\")\nwave3_st &lt;- as.Date(\"2021-08-01\")\nwave4_st &lt;- as.Date(\"2021-08-01\")\nwave5_st &lt;- as.Date(\"2022-07-01\")\nwave6_st &lt;- as.Date(\"2023-04-01\")\n\nwave1 &lt;- seq(wave1_st, wave1_st %m+% months(9), by = \"2 months\")\nwave2 &lt;- seq(wave2_st, wave2_st %m+% months(9), by = \"2 months\")\nwave3 &lt;- seq(wave3_st, wave3_st %m+% months(11), by = \"2 months\")\nwave4 &lt;- seq(wave4_st, wave4_st %m+% months(9), by = \"2 months\")\nwave5 &lt;- seq(wave5_st, wave5_st %m+% months(9), by = \"2 months\")\nwave6 &lt;- seq(wave6_st, wave6_st %m+% months(5), by = \"2 months\")\nwave6_fin &lt;- seq(wave6_st, wave6_st %m+% months(7), by = \"2 months\")\n\ndate_labels &lt;- c(as.Date(\"2020-01-01\"), \n                 wave1, wave2, wave3, wave4, wave5, wave6\n                 )\n\nowideu &lt;- owideu |&gt; \n  mutate(waves = case_when(\n    date_mon %in% wave1 ~ 'wave1',\n    date_mon %in% wave2 ~ 'wave2',\n    date_mon %in% wave3 ~ 'wave3',\n    date_mon %in% wave4 ~ 'wave4',\n    date_mon %in% wave5 ~ 'wave5',\n    date_mon %in% wave6_fin ~ 'wave6',\n  ))\n\ntext_labels &lt;- owideu |&gt; \n  filter(!is.na(waves)) |&gt; \n  group_by(waves) |&gt;\n  summarise(max_deaths=max(new_deaths, na.rm=T), .groups='drop')  |&gt;\n  left_join(owideu |&gt; select(location, date, new_deaths, waves), \n            join_by(waves, max_deaths==new_deaths)) |&gt; \n  select(x=date, y=max_deaths, label=location)\n\nowideu |&gt; \n  filter(date &gt;= '2020-01-01' & date &lt;= '2023-10-31') |&gt;\n  filter(location != c(\"United Kingdom\")) |&gt;\n  # group_by(date_mon, iso_code) |&gt; \n  # summarise(total_deaths=sum(new_deaths_smoothed, na.rm=T), .groups = 'drop') |&gt; \n  # filter(!is.na(new_deaths)) |&gt; \n  ggplot(aes(x=date, y=new_deaths)) +\n    geom_point(color=\"#E72A8A\", cex=0.5) +\n    ggrepel::geom_text_repel(data = text_labels, \n              aes(x=x, y=y), label=text_labels |&gt; select(label) |&gt; pull()) +\n    labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n    theme_minimal() +\n    scale_x_date(\n      # limits = c(as.Date('2020-02-01', format=\"%Y-%m-%d\"), as.Date('2023-10-01', format=\"%Y-%m-%d\")),\n      breaks = date_labels, \n      # labels = ,\n      date_labels =  \"%Y-%m\"\n      # expand = expansion(add = c(30, 0)) #c(0,0)\n      ) +\n    scale_y_continuous(breaks = c(0, 1000, seq(3000, 10000, 2000))) +\n    theme(axis.text.x=element_text(angle=90, hjust=-3, vjust = 0.5), \n          axis.text.y = element_text(size = 11, angle=90, vjust=3, hjust = 0.5), \n          axis.title.y = element_text(vjust = 7),\n          panel.grid = element_blank(), \n          panel.border = element_rect(colour = \"black\", fill=NA),\n          plot.margin = margin(t = 10, r = 10, b = 10, l = 30),\n          axis.ticks.y = element_line(color = \"black\", linewidth = 0.3),\n          axis.ticks.length.y = unit(8, \"pt\"))\n\n\n\n\n\n\n\n\nThis is as close as I could get. There are a few aspects I have missed."
  },
  {
    "objectID": "assign3.html#pre-hackathon-by-team",
    "href": "assign3.html#pre-hackathon-by-team",
    "title": "Assignment 3",
    "section": "",
    "text": "I had to replicate the following scatterplot with my own code.\n\nThe following code was provided to get the dataset.\n\n## Download COVID data from OWID GitHub\n# owidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# Save it to save time when rendering\n# saveRDS(owidall, \"./data/owidall_assign3.rds\")\nowidall = readRDS(\"./data/owidall_assign3.rds\")\n# Deselect cases/rows with OWID\nowidall = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\n# Subset by continent: Europe\nowideu = subset(owidall, continent==\"Europe\")\n\nNow I write code in hopes of replicating the plot.\n\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(lubridate)\n\n\nowideu &lt;- owideu |&gt; \n  mutate(date = as.Date(date, format = \"%Y-%m-%d\"),\n         date_mon = floor_date(date, \"month\")) |&gt; \n  filter(!(location %in% c(\"United Kingdom\", \"Russia\")))\n\nwave1_st &lt;- as.Date(\"2020-02-01\")\nwave2_st &lt;- as.Date(\"2020-11-01\")\nwave3_st &lt;- as.Date(\"2021-08-01\")\nwave4_st &lt;- as.Date(\"2021-08-01\")\nwave5_st &lt;- as.Date(\"2022-07-01\")\nwave6_st &lt;- as.Date(\"2023-04-01\")\n\nwave1 &lt;- seq(wave1_st, wave1_st %m+% months(9), by = \"2 months\")\nwave2 &lt;- seq(wave2_st, wave2_st %m+% months(9), by = \"2 months\")\nwave3 &lt;- seq(wave3_st, wave3_st %m+% months(11), by = \"2 months\")\nwave4 &lt;- seq(wave4_st, wave4_st %m+% months(9), by = \"2 months\")\nwave5 &lt;- seq(wave5_st, wave5_st %m+% months(9), by = \"2 months\")\nwave6 &lt;- seq(wave6_st, wave6_st %m+% months(5), by = \"2 months\")\nwave6_fin &lt;- seq(wave6_st, wave6_st %m+% months(7), by = \"2 months\")\n\ndate_labels &lt;- c(as.Date(\"2020-01-01\"), \n                 wave1, wave2, wave3, wave4, wave5, wave6\n                 )\n\nowideu &lt;- owideu |&gt; \n  mutate(waves = case_when(\n    date_mon %in% wave1 ~ 'wave1',\n    date_mon %in% wave2 ~ 'wave2',\n    date_mon %in% wave3 ~ 'wave3',\n    date_mon %in% wave4 ~ 'wave4',\n    date_mon %in% wave5 ~ 'wave5',\n    date_mon %in% wave6_fin ~ 'wave6',\n  ))\n\ntext_labels &lt;- owideu |&gt; \n  filter(!is.na(waves)) |&gt; \n  group_by(waves) |&gt;\n  summarise(max_deaths=max(new_deaths, na.rm=T), .groups='drop')  |&gt;\n  left_join(owideu |&gt; select(location, date, new_deaths, waves), \n            join_by(waves, max_deaths==new_deaths)) |&gt; \n  select(x=date, y=max_deaths, label=location)\n\nowideu |&gt; \n  filter(date &gt;= '2020-01-01' & date &lt;= '2023-10-31') |&gt;\n  filter(location != c(\"United Kingdom\")) |&gt;\n  # group_by(date_mon, iso_code) |&gt; \n  # summarise(total_deaths=sum(new_deaths_smoothed, na.rm=T), .groups = 'drop') |&gt; \n  # filter(!is.na(new_deaths)) |&gt; \n  ggplot(aes(x=date, y=new_deaths)) +\n    geom_point(color=\"#E72A8A\", cex=0.5) +\n    ggrepel::geom_text_repel(data = text_labels, \n              aes(x=x, y=y), label=text_labels |&gt; select(label) |&gt; pull()) +\n    labs(x = \"Date\", y = \"COVID Deaths in Europe (Daily)\") +\n    theme_minimal() +\n    scale_x_date(\n      # limits = c(as.Date('2020-02-01', format=\"%Y-%m-%d\"), as.Date('2023-10-01', format=\"%Y-%m-%d\")),\n      breaks = date_labels, \n      # labels = ,\n      date_labels =  \"%Y-%m\"\n      # expand = expansion(add = c(30, 0)) #c(0,0)\n      ) +\n    scale_y_continuous(breaks = c(0, 1000, seq(3000, 10000, 2000))) +\n    theme(axis.text.x=element_text(angle=90, hjust=-3, vjust = 0.5), \n          axis.text.y = element_text(size = 11, angle=90, vjust=3, hjust = 0.5), \n          axis.title.y = element_text(vjust = 7),\n          panel.grid = element_blank(), \n          panel.border = element_rect(colour = \"black\", fill=NA),\n          plot.margin = margin(t = 10, r = 10, b = 10, l = 30),\n          axis.ticks.y = element_line(color = \"black\", linewidth = 0.3),\n          axis.ticks.length.y = unit(8, \"pt\"))\n\n\n\n\n\n\n\n\nThis is as close as I could get. There are a few aspects I have missed."
  },
  {
    "objectID": "oct8_hackathon.html",
    "href": "oct8_hackathon.html",
    "title": "Assignment 4",
    "section": "",
    "text": "This assignment is the class hackathon posted on Oct 8. The hackathon requires making charts 1-4 among this using any data available.\nI plan to use the OWID dataset we used in Assignment 3. Since it has several countries I get multiple categories there.\n## Download COVID data from OWID GitHub\n# owidall = read.csv(\"https://github.com/owid/covid-19-data/blob/master/public/data/owid-covid-data.csv?raw=true\")\n# Save it to save time when rendering\n# saveRDS(owidall, \"./data/owidall_assign3.rds\")\nowidall = readRDS(\"./data/owidall_assign3.rds\")\n# Deselect cases/rows with OWID\nowidall = owidall[!grepl(\"^OWID\", owidall$iso_code), ]\nowidall &lt;- owidall |&gt; mutate(date=as.Date(date))"
  },
  {
    "objectID": "oct8_hackathon.html#chart-1---comparison-among-items-with-two-variables-per-item.",
    "href": "oct8_hackathon.html#chart-1---comparison-among-items-with-two-variables-per-item.",
    "title": "Assignment 4",
    "section": "Chart 1 - Comparison among items with two variables per item.",
    "text": "Chart 1 - Comparison among items with two variables per item.\n\nowidall |&gt;\n  filter(year(date)==2020) |&gt; \n  group_by(continent) |&gt; \n  summarise(case_cnt=sum(new_cases, na.rm=TRUE), \n            death_cnt=sum(new_deaths, na.rm=TRUE),\n            .groups='drop') |&gt; \n  pivot_longer(cols = c(case_cnt, death_cnt), names_to = 'metric') |&gt; \n  mutate(value = round(value/10^6, 1), \n         metric = case_when(metric == 'case_cnt' ~ \"Case Count\",\n                            metric=='death_cnt' ~ \"Death Count\")) |&gt; \n  ggplot(aes(x=continent, fill=metric, y=value, label=value, group=metric)) +\n    geom_col(position='dodge') +\n    geom_text(position=position_dodge(width=0.9), vjust = -0.5) +\n    theme_minimal() +\n    labs(x = 'Continent', \n         y = 'Total Counts\\n(in millions)', \n         fill='Metric', \n         title = 'COVID BURDEN ACROSS CONTINENTS, 2020',\n         caption = \"**Note**: Russia and UK counts are included within Europe.&lt;br&gt;&lt;br&gt;**Source**: Hasell, J., Mathieu, E., Beltekian, D. *et al.* *Sci Data* 7, 345 (2020).\"\n         ) +\n    scale_fill_brewer(palette=\"Dark2\") +\n    scale_y_continuous(expand=c(0, 2)) +\n    theme(legend.position='top', \n            panel.grid = element_blank(), \n            axis.text.y=element_blank(),\n            axis.text.x=element_text(vjust = 6, size=10),\n            axis.title.x=element_text(vjust = 3.9),\n            plot.margin = margin(t = 15, r = 10, b = 15, l = 20),\n            plot.title = element_text(hjust=-0.15),\n            text = element_text(family=\"Palantino\"),\n            plot.caption=ggtext::element_markdown(hjust = 0, size=8),\n            )\n\n\n\n\n\n\n\n\nNotice the following embellishments: 1. Use of custom Palantino font 2. Legend position and titling 3. Caption with notes and source. 4. Y axis title rotated. 5. Use of Dark2 color palette. The default color makes death count come up in blue instead of red, the color typically associated with death. 6. Attempt was made to align title and y axis title."
  },
  {
    "objectID": "oct8_hackathon.html#chart-2---comparison-among-items-with-one-variable-per-iterm-but-many-nested-categories",
    "href": "oct8_hackathon.html#chart-2---comparison-among-items-with-one-variable-per-iterm-but-many-nested-categories",
    "title": "Assignment 4",
    "section": "Chart 2 - Comparison among items with one variable per iterm but many (nested) categories",
    "text": "Chart 2 - Comparison among items with one variable per iterm but many (nested) categories\n\nowidall |&gt;\n  filter(year(date)==2020) |&gt; \n  group_by(continent, location) |&gt; \n  summarise(case_cnt=round(sum(new_cases, na.rm=TRUE)/10^5, 1), \n            .groups = 'drop') |&gt;\n  group_by(continent) |&gt; \n  slice_max(order_by = case_cnt, n= 5, with_ties=FALSE) |&gt;\n  arrange(desc(case_cnt), .by_group=TRUE) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x=fct_reorder(location, -case_cnt), label = case_cnt, y=case_cnt, fill='single')) +\n    geom_col(position='dodge') +\n    geom_text(position=position_dodge(width=0.9), vjust = -0.5, size = 2.5) +\n    theme_minimal() +\n    labs(x = 'Country', \n         y = 'Case Counts\\n(in 100k)', \n           title = 'TOP 5 COUNTRIES BY COVID CASE COUNTS, 2020',\n         caption = \"**Note**: Russia and UK counts are included within Europe.&lt;br&gt;&lt;br&gt;**Source**: Hasell, J., Mathieu, E., Beltekian, D. *et al.* *Sci Data* 7, 345 (2020).\"\n         ) +\n    scale_fill_brewer(palette=\"Dark2\") +\n    theme(legend.position='None', \n          panel.grid = element_blank(), \n          axis.text.y=element_blank(),\n          axis.title.y=element_text(vjust=0.5),\n          axis.text.x=element_text(size=7, angle = 90, hjust = 1, vjust = 0.5),\n          axis.title.x=element_text(vjust = 2),\n          plot.margin = margin(t = 5, r = 10, b = 4, l = 10),\n          text = element_text(family=\"Palantino\"),\n          plot.caption=ggtext::element_markdown(hjust = 0, size=8)\n          ) +\n    facet_wrap(vars(continent), scales=\"free_x\") +\n    scale_y_continuous(expand=c(0, 80))\n\n\n\n\n\n\n\n\nThis was harder to plot but it shares many aesthetic elements from chart 1."
  },
  {
    "objectID": "oct8_hackathon.html#chart-3---comparison-among-items-with-one-variable-per-iterm-but-several-items-within-fewer-categories",
    "href": "oct8_hackathon.html#chart-3---comparison-among-items-with-one-variable-per-iterm-but-several-items-within-fewer-categories",
    "title": "Assignment 4",
    "section": "Chart 3 - Comparison among items with one variable per iterm but several items within fewer categories",
    "text": "Chart 3 - Comparison among items with one variable per iterm but several items within fewer categories\n\nowidall |&gt;\n  filter(year(date)==2020 & continent %in% c('North America', 'South America')) |&gt; \n  group_by(continent, location) |&gt; \n  summarise(case_cnt=round(sum(new_cases, na.rm=TRUE)/10^5, 1), \n            .groups = 'drop') |&gt;\n  filter(case_cnt &gt; 0) |&gt; \n  # group_by(continent) |&gt; \n  # slice_max(order_by = case_cnt, n= 5, with_ties=FALSE) |&gt;\n  # arrange(desc(case_cnt), .by_group=TRUE) |&gt; \n  # ungroup() |&gt; \n  ggplot(aes(y=fct_reorder(location, -case_cnt), label = case_cnt, x=case_cnt, \n             fill='single')) +\n    geom_col(position='dodge') +\n    geom_text(position=position_dodge(width=0.9), hjust = -0.3, size = 3) +\n    theme_minimal() +\n    labs(y = 'Country', \n         x = 'Case Counts (in 100k)', \n           title = 'COVID CASE COUNTS IN THE AMERICAS, 2020',\n         caption = \"**Source**: Hasell, J., Mathieu, E., Beltekian, D. *et al.* *Sci Data* 7, 345 (2020).\"\n         ) +\n    scale_fill_brewer(palette=\"Dark2\") +\n    theme(legend.position='None', \n          panel.grid = element_blank(), \n          axis.text.x=element_blank(),\n          axis.title.x=element_text(vjust=1),\n          axis.text.y=element_text(size=7, hjust = 1, vjust = 0.5),\n          axis.title.y=element_text(vjust = 2),\n          plot.margin = margin(t = 5, r = 10, b = 4, l = 30),\n          plot.title = element_text(hjust=-0.9),\n          text = element_text(family=\"Palantino\"),\n          plot.caption=ggtext::element_markdown(hjust = 0, size=8)\n          ) +\n    facet_wrap(vars(continent), scales=\"free_y\") +\n    scale_x_continuous(expand=c(0, 80))"
  },
  {
    "objectID": "oct8_hackathon.html#chart-4---comparison-among-items-with-one-variable-per-iterm-but-fewer-items-within-fewer-categories",
    "href": "oct8_hackathon.html#chart-4---comparison-among-items-with-one-variable-per-iterm-but-fewer-items-within-fewer-categories",
    "title": "Assignment 4",
    "section": "Chart 4 - Comparison among items with one variable per iterm but fewer items within fewer categories",
    "text": "Chart 4 - Comparison among items with one variable per iterm but fewer items within fewer categories\n\nowidall |&gt;\n  filter(year(date)==2020 & continent %in% c('North America', 'South America')) |&gt; \n  group_by(continent, location) |&gt; \n  summarise(case_cnt=round(sum(new_cases, na.rm=TRUE)/10^5, 1), \n            .groups = 'drop') |&gt;\n  group_by(continent) |&gt; \n  slice_max(order_by = case_cnt, n= 5, with_ties=FALSE) |&gt;\n  arrange(desc(case_cnt), .by_group=TRUE) |&gt; \n  mutate(Rank=row_number(), \n         continent=factor(continent, levels = c('North America', 'South America')),\n         location=factor(location, levels = unique(location))\n         ) |&gt; \n  ungroup() |&gt; \n  ggplot(aes(x=location, label = case_cnt, y=case_cnt, fill=continent)) +\n    geom_col(position='dodge') +\n    facet_grid(. ~ Rank, switch = 'both', scales = 'free_x') +\n    geom_text(position=position_dodge(width=0.9), vjust = -0.5, size = 3) +\n    theme_minimal() +\n    labs(x = 'Country', \n         y = 'Case Counts\\n(in 100k)', \n           title = 'TOP 5 COUNTRIES BY COVID CASE COUNTS IN THE AMERICAS, 2020',\n         caption = \"**Source**: Hasell, J., Mathieu, E., Beltekian, D. *et al.* *Sci Data* 7, 345 (2020).\"\n         ) +\n    scale_fill_brewer(palette=\"Dark2\") +\n    theme(legend.position='None', \n          panel.grid = element_blank(), \n          axis.text.y=element_blank(),\n          axis.title.y=element_text(vjust=0.5),\n          axis.text.x=element_text(angle = 90, hjust = 1, vjust = 0.5),\n          axis.title.x=element_text(vjust = 2),\n          plot.margin = margin(t = 5, r = 10, b = 4, l = 10),\n          plot.title = element_text(hjust = -0.8),\n          text = element_text(family=\"Palantino\"),\n          plot.caption=ggtext::element_markdown(hjust = 0, size=8)\n          ) +\n    scale_y_continuous(expand=c(0, 50))\n\n\n\n\n\n\n\n\nUse of facet_grid unfortunately makes more lose control of some theme elements. Specifically, I lost control over the Rank numbers. Iâ€™d like to put those closer to the x axis but I canâ€™t shift the secondary axis anymore."
  },
  {
    "objectID": "project.html",
    "href": "project.html",
    "title": "Project",
    "section": "",
    "text": "Proposal presentation\n\n\n\nProposal document"
  }
]